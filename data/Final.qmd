---
title: "Final - ENVS 193DS"
author: "Eliana Shandalov"
date: "June 3, 2025"
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---

Link to GitHub repo: https://github.com/eliana427/ENVS-193DS_spring-2025_final.git
```{r message=FALSE, echo=FALSE}
# exculde from rendered document
library(tidyverse)
library(janitor)
library(here)
library(scales)
library(ggeffects)
library(MuMIn)
library(DHARMa)
sst <- read_csv(
  here("data", "SST_update2023.csv"))
nest_boxes <- read_csv(
  here("data", "occdist.csv"))
```

Problem 1. Research writing

a. Transparent statistical methods

In part one, my co-worker likely did a Pearson correlation (if each variable is normally distributed), but if they're not normally distributed than the test was likely a Spearman rank correlation. In part 2, my co-worker likely did a one way ANOVA test (for normally distributed variable and sources have equal variances) or a Kurskal-Wallis test (data is not normally distributed).

b.  More information needed

The effect size (in this case, $\eta^2$) would be helpful because it gives information about how big the difference is between groups, specifically how much the type of source impacts the variation of average nitrogen load. A post hoc Tukey's HSD test would be helpful because it provides information about which groups in particular differ in nitrogen load by comparing the pairs of sources directly.

c. Suggestions for rewriting

We found a large difference ($\eta^2$ = effect size) in average load of nitrogen (kg/year) between tested sources (urban land, atmospheric deposition, fertilizer, waste water treatment, and grasslands) (one-way ANOVA, F(4, df within groups) = F value, p = 0.03, $\alpha$ = significance level)). A post hoc comparison using Tukey's HSD indicated that there were differences in the mean load of nitrogen between two of the of sources (amount kg/year less, x% CI: [lower bound, upper bound]) and another two of the of sources (amount less kg/year, x% CI: [lower bound, upper bound]).


Problem 2. Data visualization

a. Cleaning and summarizing
```{r}
library(lubridate)

sst_clean <- sst |> # store sst as new object called sst_clean
  clean_names() # make all names lowercase, and if there were spaces then change to underscores

sst_clean <- sst_clean |> # assigns sst_clean to itself to use in next functions
  mutate(
    date = as.Date(date), # make sure that R reads this column as a date that can be separated
    month = month(date, label = TRUE, abbr = FALSE), # separate out months from date column
    year_extracted = year(date) # extract the year from the data set
  ) |> 
  filter(year_extracted >= 2018) |> # filter the data set to only include dates 2018 and later
  mutate(year = factor(year_extracted), # read year as a factor
    date = NULL, # remove date column from displayed data in console
    site = NULL, # remove site column from displayed data in console
    latitude = NULL, # remove latitude column from displayed data in console
    longitude = NULL # remove longitude column from displayed data in console
  ) |> 
  group_by(year, month) |> # group by year and month
  summarize(mean_monthly_sst = mean(temp, na.rm = TRUE)) |> # calculate mean temperature per group
  ungroup() |>  # removes groupings back to original data frame

# rename all months in month column to abbreviations  
mutate(month = case_when(
  month == "January" ~ "Jan",
  month == "February" ~ "Feb",
  month == "March" ~ "Mar",
  month == "April" ~ "Apr",
  month == "May" ~ "May",
  month == "June" ~ "Jun",
  month == "July" ~ "Jul",
  month == "August" ~ "Aug",
  month == "September" ~ "Sep",
  month == "October" ~ "Oct",
  month == "November" ~ "Nov",
  month == "December" ~ "Dec"
)) |> 
  
mutate(month = factor(month, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"),
ordered = TRUE)) # sort months in order when they appear on graph

slice_sample(sst_clean, n = 5) # display five random rows of the data set 

str(sst_clean) # show structure of the data set
```

b. Visualize the data

```{r}
sst_plot <- sst_clean # creating new object for plot

ggplot(data = sst_clean, # use data from sst_clean
       aes(x = month, # x axis is month
           y = mean_monthly_sst, # y axis is mean_monthly_sst
           color = year, # color will be based on year
           group = year)) + # data will be grouped by year+ 
geom_line() + # create a line plot
  scale_color_manual(values= c("#2E004F", "#4B0082", "#6A0DAD", "#8A2BE2", "#A24AC3", "#BF65D9")) + # colors will be a gradient with 2018 being the darkest and 2023 being the lightest
geom_point(size = 1.1) + # add points to the lines of size 1.1
  labs(x = "Month", # rename the x axis
       y = "Mean monthly sea surface temperature (Â°C)", # rename the y axis
       color = "Year") + # rename the legend which is based on color
  theme(panel.grid = element_blank(), # remove the grid lines
        panel.background = element_blank(), # make panel background blank
        panel.border = element_rect(color = "grey24", fill = NA, linewidth = 0.5), # add border to plot of width 0.5 but don't fill it in
        axis.ticks.length.x = unit (1, "mm"), # make axis ticks on x axis 1 mm
        axis.ticks.length.y = unit (1, "mm"), # make axis ticks on y axis 1 mm
        legend.position = "inside", # place legend inside of plot
        legend.position.inside = c(0.15, 0.7)) # legend will be positioned at these coordinates

```

Problem 3. Data analysis

a. Response variable

The 0's and 1's represent if the nest box is occupied or not by a particular species; a 0 means means not occupied by these species, and a 1 means occupied by this species. The "empty" column with a 1 means the box was empty, and with a 0 means it had some species living in it.

b. Purpose of study

Swift Parrots are far more selective about where they nest compared to Tree Martins and Common Starlings, so the nest boxes are designed for them but are at risk of occupancy of these competitors. Swift Parrots are subject to a higher risk of extinction because of human impacts on forests, moreso than Tree Martins and Common Starlings.

c. Difference in "seasons"

The authors of the study explain that the "seasons" are the years 2016 and 2019, which were important to test how effective the use of permanent boxes are. In 2016, the researchers put nest boxes at a breeding sites of Swift Parrots, where a mast tree flowering event had occurred and the boxes remained in place when in 2019 another mast tree flowering event occurred.

d. Table of models

| Model number | Season | Distance to Forest Edge | Model Description                 |  
|:------------:|:------:|:-----------------------:|-----------------------------------|  
| 1            |        |                         | no predictors (null model)        | 
| 2            |    X   |           X             | all predictors (saturated model)  |   
| 3            |        |           X             | distance to forest edge           |    
| 4            |    X   |                         | season                            |    

```{r message=FALSE, echo=FALSE}
nest_boxes_clean <- nest_boxes |> # store sst as new object called sst_clean
  clean_names() # make all names lowercase, and if there were spaces then change to underscores
```


e. Run the models
```{r}
# model 1, null model: where any species is present
model1 <- glm(sp ~ 1,
                data = nest_boxes_clean)

# model 2, saturated model: where edge distance and season impact whether any species is present
model2 <- glm(sp ~ edge_distance + season,
                data = nest_boxes_clean)

# model 3, one predictor: where edge distance impacts if swift parrots are present
model3 <- glm(sp ~ edge_distance,
                data = nest_boxes_clean)

# model 4, other predictor: where season impacts if swift parrots are present
model4 <- glm(sp ~ season,
                data = nest_boxes_clean)

```

f. Check the diagnostics

```{r}

# show model 1
plot(
  simulateResiduals(model1)
)

# show model 2
plot(
  simulateResiduals(model2)
)

# show model 3
plot(
  simulateResiduals(model3)
)

# show model 4
plot(
  simulateResiduals(model4)
)
```

g. Select the best model

```{r}
# run AIC comparison to find out which model is best to represent data
AICc(model1,
     model2,
     model3,
     model4) |> 
  arrange(AICc)
```

The best model as determined by Akaike's Information Criterion (AIC) is the one that compares if Swift Parrots are present depending on distance to forest edge and season (saturated model, all predictor variables included).

h. Visualize the model predictions
```{r}

# working on it, might not need
par(mfrow = c(2,2))
plot(model1, which = 1, main = "Model 1")
plot(model2, which = 1, main = "Model 2")
plot(model3, which = 1, main = "Model 3")
plot(model4, which = 1, main = "Model 4")

```

```{r}
mod_preds <- ggpredict(model2,
                        terms = c("edge_distance [7:1072] by = 1", "season"))

mod_preds_plot <- ggplot() +

  geom_point(data = nest_boxes_clean,
             aes(x = edge_distance,
                 y = sp),
             size = 3,
             alpha = 0.4,
             color = "blue") +

  # Confidence ribbon from model predictions
  geom_ribbon(data = mod_preds,
              aes(x = x,
                  ymin = conf.low,
                  ymax = conf.high,
                  fill = group),
              alpha = 0.4) +

  # Prediction line from model
  geom_line(data = mod_preds,
            aes(x = x,
                y = predicted,
                color = group),
            linewidth = 1.2) +

  # Manual color and fill scale
  scale_color_manual(values = c("2016" = "orange", "2019" = "purple")) +
  scale_fill_manual(values = c("2016" = "orange", "2019" = "purple")) +

  # Y-axis formatting
  scale_y_continuous(limits = c(0, 1),
                     breaks = c(0, 1)) +

  # Theme adjustments
  theme(
    panel.grid = element_blank(),
    panel.background = element_blank(),
    panel.border = element_rect(color = "grey24", fill = NA, linewidth = 0.5),
    axis.ticks.length.x = unit(1, "mm"),
    axis.ticks.length.y = unit(1, "mm")
  ) +

  # Axis labels
  labs(
    x = "Edge Distance",
    y = "Presence of Swift Parrot",
    color = "Season",
    fill = "Season"
  )

mod_preds_plot
```

i. Write a caption for your figure

**Figure 1. Swift Parrots tend to occupy more nest boxes that are closer to the forests for seasons 2016 and 2019, and occupied more next boxes in 2016.** Data from 'A case study of a critically endangered bird' (Stojanovic, Dejan et al. (2021). Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird [Dataset]. Dryad.). Points (blue) represent if Swift Parrots were present (yes = 1, no = 0) and how far they were from the forest edge (unit) (total n = 227). Colors and the shape around the lines represent the 95% confidence interval (orange: 2016, purple: 2019).

j.  Calculate model predictions
**not sure if this is actually what i need here**
```{r}
summary(model2)

gtsummary::tbl_regression(model2,
                         exponentiate = TRUE)
```

